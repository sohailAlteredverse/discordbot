"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Routing = exports.Actor = void 0;
const packets_pb_1 = require("../../../../proto/ai/inworld/packets/packets_pb");
class Actor {
    constructor({ name, isPlayer, isCharacter, }) {
        this.name = name;
        this.isPlayer = isPlayer;
        this.isCharacter = isCharacter;
    }
    static fromProto(proto) {
        var _a;
        const type = proto === null || proto === void 0 ? void 0 : proto.getType();
        return new Actor({
            name: (_a = proto === null || proto === void 0 ? void 0 : proto.getName()) !== null && _a !== void 0 ? _a : '',
            isPlayer: type === packets_pb_1.Actor.Type.PLAYER,
            isCharacter: type === packets_pb_1.Actor.Type.AGENT,
        });
    }
}
exports.Actor = Actor;
class Routing {
    constructor({ source, targets }) {
        this.source = source;
        this.targets = targets;
    }
    static fromProto(proto) {
        var _a, _b;
        const targets = ((_a = proto === null || proto === void 0 ? void 0 : proto.getTarget()) === null || _a === void 0 ? void 0 : _a.getType())
            ? [proto.getTarget()]
            : (_b = proto === null || proto === void 0 ? void 0 : proto.getTargetsList()) !== null && _b !== void 0 ? _b : [];
        return new Routing({
            source: Actor.fromProto(proto === null || proto === void 0 ? void 0 : proto.getSource()),
            targets: targets.map((target) => Actor.fromProto(target)),
        });
    }
}
exports.Routing = Routing;
