import { InteractionFeedback } from '../../../proto/ai/inworld/engine/v1/feedback_pb';
export interface FeedbackProps {
    isLike?: boolean;
    types?: DislikeType[];
    comment?: string;
    name?: string;
}
export declare enum DislikeType {
    IRRELEVANT = "IRRELEVANT",
    UNSAFE = "UNSAFE",
    UNTRUE = "UNTRUE",
    INCORRECT_USE_KNOWLEDGE = "INCORRECT_USE_KNOWLEDGE",
    UNEXPECTED_ACTION = "UNEXPECTED_ACTION",
    UNEXPECTED_GOAL_BEHAVIOR = "UNEXPECTED_GOAL_BEHAVIOR",
    REPETITION = "REPETITION",
    UNSPECIFIED = "UNSPECIFIED"
}
export declare class Feedback {
    readonly isLike: boolean;
    readonly types: DislikeType[];
    readonly comment: string | undefined;
    readonly name: string | undefined;
    constructor(props?: FeedbackProps);
    static fromProto(proto: InteractionFeedback): Feedback;
    toProto(): InteractionFeedback;
    private static convertTypeToProto;
    private static convertTypeFromProto;
}
